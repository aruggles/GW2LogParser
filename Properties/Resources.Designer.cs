//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gw2LogParser.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gw2LogParser.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ////* jshint node: true */
        ////*jslint browser: true */
        ////*global animator, animateCanvas, noUpdateTime, deadIcon, dcIcon, downIcon*/
        ///&quot;use strict&quot;;
        /////// ACTORS
        ///class IconDrawable {
        ///    constructor(pos, start, end, imgSrc, pixelSize, dead, down, dc) {
        ///        this.pos = pos;
        ///        this.start = start;
        ///        this.end = end;
        ///        this.img = new Image();
        ///        this.img.src = imgSrc;
        ///        this.img.onload = function () {
        ///            animateCanvas(noUpdateTime);
        ///        };
        ///        this [rest of string was truncated]&quot;;.
        /// </summary>
        public static string actors {
            get {
                return ResourceManager.GetString("actors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ////* jshint node: true */
        ////*jslint browser: true */
        ////* global logData*/
        ///// const images
        ///&quot;use strict&quot;;
        ///
        ///function compileCRTemplates() {
        ///    TEMPLATE_CR_COMPILE
        ///};
        ///
        ///const noUpdateTime = -1;
        ///const updateText = -2;
        ///const deadIcon = new Image();
        ///deadIcon.onload = function () {
        ///    animateCanvas(noUpdateTime);
        ///};
        ///const downIcon = new Image();
        ///downIcon.onload = function () {
        ///    animateCanvas(noUpdateTime);
        ///};
        ///const dcIcon = new Image();
        ///dcIcon.onload = function () {
        ///    animateCanvas(noUpda [rest of string was truncated]&quot;;.
        /// </summary>
        public static string animator {
            get {
                return ResourceManager.GetString("animator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script&gt;
        ///
        ///    &quot;use strict&quot;;
        ///
        ///    /*\
        ///    |*|
        ///    |*|  Base64 / binary data / UTF-8 strings utilities
        ///    |*|
        ///    |*|  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding
        ///    |*|
        ///    \*/
        ///
        ///    /* Array of bytes to Base64 string decoding */
        ///
        ///    function b64ToUint6(nChr) {
        ///
        ///        return nChr &gt; 64 &amp;&amp; nChr &lt; 91 ?
        ///            nChr - 65
        ///            : nChr &gt; 96 &amp;&amp; nChr &lt; 123 ?
        ///                nChr - 71
        ///                : nChr &gt; 47 &amp;&amp; nChr &lt; 58 ?
        ///                    nChr + 4
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        public static string compressionUtils {
            get {
                return ResourceManager.GetString("compressionUtils", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .table th {
        ///    border-top: 0;
        ///}
        ///
        ///.form-control {
        ///    padding: 0.300rem 0.4rem;
        ///}
        ///
        ///.theme-slate g.hovertext text.name {
        ///    fill: #cccccc !important;
        ///}
        ///
        ///.theme-yeti g.hovertext text.name {
        ///    fill: #495057 !important;
        ///}
        ///
        ///.theme-slate g.hovertext rect {
        ///    fill: #272B30 !important;
        ///    fill-opacity: 0.9 !important;
        ///}
        ///
        ///.theme-yeti g.hovertext rect {
        ///    fill: #fff !important;
        ///    fill-opacity: 0.9 !important;
        ///}
        ///
        ///.scrollable-y {
        ///    overflow-y: auto;
        ///    overflow-x: hidden;
        ///}
        ///
        ///.scrollable-x {
        ///    overflow-y: [rest of string was truncated]&quot;;.
        /// </summary>
        public static string css {
            get {
                return ResourceManager.GetString("css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ////* jshint node: true */
        ////*jslint browser: true */
        ////*global animator, ToRadians, facingIcon, animateCanvas, noUpdateTime*/
        ///&quot;use strict&quot;;
        /////// BASE MECHANIC
        ///class MechanicDrawable {
        ///    constructor(start, end, connectedTo) {
        ///        this.start = start;
        ///        this.end = end;
        ///        this.connectedTo = connectedTo;
        ///        this.master = null;
        ///    }
        ///
        ///    draw() {
        ///        // to override
        ///    }
        ///
        ///    getPosition() {
        ///        if (this.connectedTo === null) {
        ///            return null;
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        public static string decorations {
            get {
                return ResourceManager.GetString("decorations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///function computeGradient(left, percent, right) {
        ///    var template = &quot;linear-gradient(to right, $fill$, $middle$, $black$)&quot;;
        ///    var res = percent;
        ///    var fillPercent = left + &quot; &quot; + res + &quot;%&quot;;
        ///    var blackPercent = right + &quot; &quot; + (100 - res) + &quot;%&quot;;
        ///    var middle = res + &quot;%&quot;;
        ///    template = template.replace(&quot;$fill$&quot;, fillPercent);
        ///    template = template.replace(&quot;$black$&quot;, blackPercent);
        ///    template = template.replace(&quot;$middle$&quot;, middle);
        ///    return template;
        ///};
        ///
        ///fun [rest of string was truncated]&quot;;.
        /// </summary>
        public static string functions {
            get {
                return ResourceManager.GetString("functions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///let apiRenderServiceOkay = true;
        ///
        ///$.extend($.fn.dataTable.defaults, {
        ///    searching: false,
        ///    ordering: true,
        ///    paging: false,
        ///    retrieve: true,
        ///    dom: &quot;t&quot;
        ///});
        ///
        ///const quickColor = {
        ///    r: 220,
        ///    g: 20,
        ///    b: 220
        ///};
        ///const slowColor = {
        ///    r: 220,
        ///    g: 125,
        ///    b: 30
        ///};
        ///const normalColor = {
        ///    r: 125,
        ///    g: 125,
        ///    b: 125
        ///};
        ///
        ///const DamageType = {
        ///    All: 0,
        ///    Power: 1,
        ///    Condition: 2,
        ///    Breakbar: 3
        ///};
        ///
        ///const GraphType = {
        ///    DPS: 0,
        ///    Damage [rest of string was truncated]&quot;;.
        /// </summary>
        public static string global {
            get {
                return ResourceManager.GetString("global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///function healingGraphTypeEnumToString(mode) {
        ///    var name = &quot;&quot;;
        ///    switch (mode) {
        ///        case GraphType.DPS:
        ///            name = &quot;HPS&quot;;
        ///            break;
        ///        case GraphType.CenteredDPS:
        ///            name = &quot;Centered HPS&quot;;
        ///            break;
        ///        case GraphType.Damage:
        ///            name = &quot;Healing&quot;;
        ///            break;
        ///        default:
        ///            break;
        ///    }
        ///    return name;
        ///}
        ///
        ///function healingTypeEnumToString(mode) {
        ///    var name = &quot;&quot;;
        ///    switch (mode) {
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        public static string healingExtFunctions {
            get {
                return ResourceManager.GetString("healingExtFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///function compileHealingExtTemplates() {
        ///    TEMPLATE_HEALING_EXT_COMPILE
        ///};
        ///
        ///var healingGraphComponent = {
        ///    data: function() {
        ///        return {     
        ///            graphhealingdata: {
        ///                hpsmode: 0,
        ///                graphmode: logData.wvw ? GraphType.Damage : GraphType.DPS,
        ///                healingmode: HealingType.All,
        ///            },
        ///        };
        ///    },
        ///};
        ///
        ///const HealingType = {
        ///    All: 0,
        ///    HealingPower: 1,
        ///    Conversion: 2,
        ///    Hybrid: 3,
        ///    Downed: 4 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string healingExtGlobals {
            get {
                return ResourceManager.GetString("healingExtGlobals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///function compileTemplates() {
        ///    Vue.component(&quot;graph-component&quot;, {
        ///        props: [&apos;id&apos;, &apos;layout&apos;, &apos;data&apos;],
        ///        template: &apos;&lt;div :id=&quot;id&quot; class=&quot;d-flex flex-row justify-content-center&quot;&gt;&lt;/div&gt;&apos;,
        ///        activated: function () {
        ///            var div = document.querySelector(this.queryID);
        ///            Plotly.react(div, this.data, this.layout, { showEditInChartStudio: true, plotlyServerURL: &quot;https://chart-studio.plotly.com&quot; });
        ///            var _this = this;
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        public static string main_js {
            get {
                return ResourceManager.GetString("main_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;use strict&quot;;
        ///
        ///var numberComponent = {
        ///    methods: {
        ///        // https://stackoverflow.com/questions/16637051/adding-space-between-numbers
        ///        integerWithSpaces: function(x) {
        ///            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, &quot; &quot;);
        ///        },
        ///        round: function (value) {
        ///            if (isNaN(value)) {
        ///                return 0;
        ///            }
        ///            return Math.round(value);
        ///        },
        ///        round1: function (value) {
        ///            if (isNaN(value)) {
        ///                return 0;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        public static string mixins {
            get {
                return ResourceManager.GetString("mixins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div style=&quot;margin: 20px;&quot;&gt;
        ///    &lt;a id=&quot;&lt;!-- Account Name --&gt;&quot; name=&quot;&lt;!-- Account Name --&gt;&quot;&gt;&lt;h3&gt;&lt;!-- Player Name --&gt;&lt;/h3&gt;&lt;/a&gt;
        ///    &lt;nav class=&quot;players&quot;&gt;
        ///        &lt;div class=&quot;nav nav-tabs&quot; role=&quot;tablist&quot;&gt;
        ///            &lt;a class=&quot;nav-item nav-link active&quot; data-toggle=&quot;tab&quot; href=&quot;#nav-&lt;!-- Account Name --&gt;-damage&quot; role=&quot;tab&quot;&gt;Damage Distribution&lt;/a&gt;
        ///            &lt;a class=&quot;nav-item nav-link&quot; data-toggle=&quot;tab&quot; href=&quot;#nav-&lt;!-- Account Name --&gt;-defense&quot; role=&quot;tab&quot;&gt;Damage Taken&lt;/a&gt;
        ///        &lt;/div&gt;
        ///    &lt;/nav&gt;
        ///    &lt;d [rest of string was truncated]&quot;;.
        /// </summary>
        public static string player_summary {
            get {
                return ResourceManager.GetString("player_summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!doctype html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;!-- Required meta tags --&gt;
        ///    &lt;meta charset=&quot;utf-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;
        ///
        ///    &lt;!-- Bootstrap CSS --&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css&quot; integrity=&quot;sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh&quot; crossorigin=&quot;anonymous&quot;&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.datatables.net/1.10.20/c [rest of string was truncated]&quot;;.
        /// </summary>
        public static string template_html {
            get {
                return ResourceManager.GetString("template_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;data&quot;&gt;&lt;/graph-component&gt;
        ///        &lt;rotation-legend-component&gt;&lt;/rotation-legend-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///
        ///    function getAdvancedRotationLayout(images, color, nbLines) {
        ///        var layout = {
        ///            barmode: &apos;stack&apos;,
        ///            legend: {
        ///                traceorder: &apos;reversed&apos;
        ///            },
        ///            hovermode: &quot;closest&quot;,
        ///            hoverdistance: 50,
        ///            images: images,
        ///            font:  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplAdvancedRotation {
            get {
                return ResourceManager.GetString("tmplAdvancedRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 0&quot; :class=&quot;{active: mode === 0}&quot;&gt;Uptime&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 1&quot; :class=&quot;{active: mode === 1 }&quot;&gt;Generation Self&lt;/a&gt;
        ///                &lt;/li&gt;
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplBuffStats {
            get {
                return ResourceManager.GetString("tmplBuffStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div&gt;
        ///            &lt;h3 class=&quot;text-center&quot;&gt;Conditions&lt;/h3&gt;
        ///            &lt;buff-table-component :condition=&quot;true&quot; :generation=&quot;true&quot; :id=&quot;&apos;condition-stats-table-&apos; + target.id&quot; :buffs=&quot;conditions&quot;
        ///                :playerdata=&quot;condiData&quot; :sums=&quot;condiSums&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;&lt;/buff-table-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-show=&quot;hasBoons&quot; class=&quot;mt-2&quot;&gt;
        ///            &lt;h3 class=&quot;text-center&quot;&gt;Boons&lt;/h3&gt;
        ///            &lt;buff-table-component :condition=&quot;false&quot; :g [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplBuffStatsTarget {
            get {
                return ResourceManager.GetString("tmplBuffStatsTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div v-if=&quot;buffs.length &gt; 0&quot;&gt;
        ///        &lt;img v-if=&quot;generation&quot; class=&quot;mb-1 icon&quot; src=&quot;https://i.imgur.com/nSYuby8.png&quot;
        ///            :data-original-title=&quot;tooltipExpl&quot; /&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot;&gt;&lt;/th&gt;
        ///                    &lt;th&gt;Name&lt;/th&gt;
        ///                    &lt;th class=&quot;stat-cell&quot; v-for=&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplBuffTable {
            get {
                return ResourceManager.GetString("tmplBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Boons&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasOffBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Offensive Buffs&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasSupBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 2}&quot; @click=&quot;tab = 2&quot;&gt;Support Buffs&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplBuffTables {
            get {
                return ResourceManager.GetString("tmplBuffTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-end&quot; :style=&quot;{&apos;height&apos;: height}&quot;&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Fight Specifics&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-display :buffarray=&quot;data.fightSpecifics&quot;&gt;&lt;/combat-replay-buff-display&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Others&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-display :buffarray=&quot;data.others&quot;&gt;&lt;/combat-replay-buff-display&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Conditions&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-display :buffarray=&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayActorBuffStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayActorBuffStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex align-items-center actor-rotation&quot;&gt;
        ///        &lt;div v-if=&quot;rotation.current&quot;&gt;
        ///            &lt;img :src=&quot;rotation.current.skill.icon&quot; :alt=&quot;rotation.current.skill.name&quot; :title=&quot;rotation.current.skill.name&quot;
        ///                class=&quot;icon-ll&quot; :class=&quot;{&apos;rot-cancelled&apos;: rotation.current.end === 2}&quot;&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-else class=&quot;empty-icon-ll&quot;&gt;
        ///    
        ///        &lt;/div&gt;
        ///        &lt;div v-for=&quot;next in rotation.nexts&quot;&gt;
        ///            &lt;img :src=&quot;next.skill.icon&quot; :alt=&quot;next.skill.name&quot; :title [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayActorRotation {
            get {
                return ResourceManager.GetString("tmplCombatReplayActorRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center flex-wrap&quot;
        ///        :style=&quot;{&apos;width&apos;: Math.max(canvasSize.x, canvasSize.y) + &apos;px&apos;}&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-column justify-content-center align-items-center&quot;
        ///            :style=&quot;{&apos;width&apos;: &apos;100%&apos;, &apos;min-width&apos;: canvasSize.x + &apos;px&apos;, &apos;height&apos;: canvasSize.y + &apos;px&apos;, &apos;position&apos;: &apos;relative&apos;}&quot;&gt;
        ///            &lt;canvas :width=&quot;canvasSize.x + &apos;px&apos;&quot; :height=&quot;canvasSize.y + &apos;px&apos;&quot; :id=&quot;htmlElementIDs.mainCanvasID&quot;
        ///                class=&quot;replay&quot;&gt;&lt;/ca [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayAnimationControl {
            get {
                return ResourceManager.GetString("tmplCombatReplayAnimationControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center&quot;&gt;
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot;
        ///            :phaseduration=&quot;this.phase.end - this.phase.start&quot; :phasehassubphases=&quot;false&quot; :ignorebreakbar=&quot;false&quot; :style=&quot;{&apos;width&apos;: selectorWidth + &apos;px&apos;}&quot; :column=&quot;selectorWidth &lt; 280&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;combat-replay-damage-stats-component :time=&quot;time&quot; :playerid=&quot;selectedplayerid&quot; :graphdata=&quot;graphdata&quot;&gt;
        ///        &lt;/combat-replay-damage-stats- [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayDamageData {
            get {
                return ResourceManager.GetString("tmplCombatReplayDamageData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;scrollable-cr-dps-table&quot;&gt;
        ///            &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;
        ///                :id=&quot;tableid&quot;&gt;
        ///                &lt;thead&gt;
        ///                    &lt;tr&gt;
        ///                        &lt;th class=&quot;cr-dps-table-icon-col&quot;&gt;&lt;/th&gt;
        ///                        &lt;th class=&quot;text-left cr-dps-table-name&quot;&gt;
        ///                            Name
        ///                        &lt;/th&gt;
        ///                        &lt;th class=&quot;cr-dps-table-dps&quot;&gt;
        ///                       [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayDamageTable {
            get {
                return ResourceManager.GetString("tmplCombatReplayDamageTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center align-items-center&quot;&gt;     
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center&quot;&gt;
        ///            &lt;div class=&quot;form-check mb-2 mr-3&quot;&gt;
        ///                &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;subgroupCheck&quot; checked v-on:change=&quot;getAnimator().toggleHighlightSelectedGroup()&quot;&gt;
        ///                &lt;label class=&quot;form-check-label&quot; for=&quot;subgroupCheck&quot;&gt;Highlight Selected Group&lt;/label&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;form-check mb- [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayExtraDecorations {
            get {
                return ResourceManager.GetString("tmplCombatReplayExtraDecorations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-center&quot;&gt;
        ///        &lt;div class=&quot;combat-replay-mechanics-list-container d-flex d-flex-row justify-content-center w-100 scrollable-y&quot; style=&quot;max-width:450px&quot;&gt;
        ///            &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///                &lt;thead&gt;
        ///                    &lt;tr&gt;
        ///                        &lt;th style=&quot;min-width:80px&quot;&gt;Time&lt;/th&gt;
        ///                        &lt;th style=&quot;min-width:120px&quot; class=&quot;tex [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayMechanicsList {
            get {
                return ResourceManager.GetString("tmplCombatReplayMechanicsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-start mb-2&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-column scrollable-y&quot; style=&quot;max-height: 250px;&quot;&gt;
        ///            &lt;div v-for=&quot;group in groups&quot; class=&quot;d-flex flex-row align-items-center ml-2 mt-1&quot; style=&quot;width:450px;&quot;&gt;
        ///                &lt;h5 class=&quot;mt-2&quot; style=&quot;min-width:80px;max-width:80px; text-align: center;&quot;&gt;Group {{group.id}}&lt;/h5&gt;
        ///                &lt;div class=&quot;d-flex flex-row flex-wrap align-items-center ml-1&quot; style=&quot;max-width:37 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayPlayerSelect {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayerSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-start mb-2&quot;&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1 scale85&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: buffs}&quot; @click=&quot;buffs = !buffs&quot;&gt;
        ///                    Show Buffs
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: rotation}&quot; @click=&quot;rotation = !rotation&quot;&gt;Show R [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayPlayersStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayersStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;combat-replay-actor-buffs-stats-component v-if=&quot;buffs &amp;&amp; buffstoshow.length &gt; 0&quot; :time=&quot;time&quot; :actorindex=&quot;playerindex&quot; :enemy=&quot;false&quot; :buffstoshow=&quot;buffstoshow&quot;&gt;&lt;/combat-replay-actor-buffs-stats-component&gt;
        ///        &lt;div class=&quot;d-flex mb-1 mt-1 align-items-center player-status-rotation&quot;&gt;
        ///            &lt;combat-replay-player-status-component :time=&quot;time&quot; :playerindex=&quot;playerindex&quot;&gt;&lt;/combat-replay-player-status-component&gt;
        ///            &lt;combat-replay-actor-rotation-component v-if=&quot;rota [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayPlayerStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayerStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;player-status&quot; :style=&quot;{&apos;background&apos;: getHPGradient(time, status)}&quot;&gt;
        ///        &lt;h6 class=&quot;actor-shorten text-center&quot; :title=&quot;player.name&quot;&gt;
        ///            &lt;img :src=&quot;player.icon&quot; :alt=&quot;player.profession&quot; height=&quot;18&quot; width=&quot;18&quot;&gt;
        ///            {{player.name}}
        ///        &lt;/h6&gt;
        ///        &lt;p v-if=&quot;hasHealth&quot; class=&quot;text-right cr-hp-display cr-hp-display-player&quot;&gt;
        ///            {{(Math.round(100*getHPPercent(time))/100).toFixed(2)}} %
        ///        &lt;/p&gt;
        ///        &lt;p v-if=&quot;hasBarrier&quot; class=&quot;text-right cr-barri [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayPlayerStatus {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayerStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center&quot;&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt;Players&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;!targetless&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt;Targets&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///              [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayStatusData {
            get {
                return ResourceManager.GetString("tmplCombatReplayStatusData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-start mb-2&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-column scrollable-y&quot; style=&quot;max-height: 250px;&quot;&gt;
        ///            &lt;div v-for=&quot;targets in targetsArray&quot; v-if=&quot;targets.values.length &gt; 0&quot;
        ///                class=&quot;d-flex flex-row align-items-center ml-2 mt-1&quot; style=&quot;width:450px;&quot;&gt;
        ///                &lt;h5 style=&quot;width:160px;text-align: center;&quot;&gt;{{targets.name}}&lt;/h5&gt;
        ///                &lt;div class=&quot;d-flex flex-row flex-wrap align-items-center ml [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayTargetSelect {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1 scale65&quot;&gt;
        ///            &lt;li v-for=&quot;(buffType, index) in possibleBuffs&quot; class=&quot;ml-1 mr-1&quot;&gt;
        ///                &lt;input :id=&quot;&apos;crtar-possibleBuffs-&apos; + index&quot; type=&quot;checkbox&quot; :value=&quot;buffType&quot; v-model=&quot;buffsToShow&quot; /&gt;
        ///                &lt;label :for=&quot;&apos;crtar-possibleBuffs-&apos; + index&quot;&gt;{{buffType}}&lt;/label&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div class=&quot;mt-1 combat-actor-status-container scrollable-y&quot;&gt;
        ///            &lt;div class= [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayTargetsStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetsStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;combat-replay-actor-buffs-stats-component v-if=&quot;buffstoshow.length &gt; 0&quot; :time=&quot;time&quot; :actorindex=&quot;targetindex&quot; :enemy=&quot;true&quot; :buffstoshow=&quot;buffstoshow&quot;&gt;&lt;/combat-replay-actor-buffs-stats-component&gt;
        ///        &lt;div class=&quot;d-flex mb-1 mt-1 align-items-center&quot;&gt;
        ///            &lt;combat-replay-target-status-component :time=&quot;time&quot; :targetindex=&quot;targetindex&quot;&gt;&lt;/combat-replay-target-status-component&gt;
        ///        &lt;/div&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;combat-replay-target-stats-c [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayTargetStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex d-flex flex-column justify-content-center align-items-center&quot;&gt;
        ///        &lt;div class=&quot;target-status&quot; :style=&quot;{&apos;background&apos;: getHPGradient(time, status)}&quot;&gt;
        ///            &lt;h6 class=&quot;actor-shorten text-center&quot; :title=&quot;target.name + &apos; - &apos; + target.health + &apos; health&apos;&quot;&gt;
        ///                &lt;img :src=&quot;target.icon&quot; height=&quot;18&quot; width=&quot;18&quot;&gt;
        ///                {{target.name}}
        ///            &lt;/h6&gt;
        ///            &lt;p class=&quot;text-right cr-hp-display cr-hp-display-target&quot;&gt;
        ///                {{(Math.round(100* [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayTargetStatus {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex mt-2 justify-content-center&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-column align-items-center mr-2&quot; style=&quot;margin-left: auto; min-width:450px;&quot;&gt;
        ///            &lt;combat-replay-damage-data-component :time=&quot;animationStatus.time&quot; :selectedplayerid=&quot;animationStatus.selectedActorID&quot;&gt;
        ///            &lt;/combat-replay-damage-data-component&gt;
        ///            &lt;ul v-if=&quot;!targetless&quot; class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplCombatReplayUI {
            get {
                return ResourceManager.GetString("tmplCombatReplayUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-table-component :key=&quot;&apos;conditions-stats-table&apos;&quot; :condition=&quot;true&quot; :generation=&quot;false&quot;
        ///            :id=&quot;&apos;conditions-stats-table&apos;&quot; :buffs=&quot;conditions&quot; :playerdata=&quot;buffData[0]&quot; :sums=&quot;buffData[1]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;conditions-table-component&quot;, {
        ///        props: [&apos;phaseindex&apos;, &apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        template: `${template}`,
        ///        data: function [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplConditionsTable {
            get {
                return ResourceManager.GetString("tmplConditionsTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDamageDistPlayer {
            get {
                return ResourceManager.GetString("tmplDamageDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;actor !== null&quot; class=&quot;mb-1 mt-1&quot;&gt;
        ///            &lt;div v-if=&quot;isminion&quot;&gt;
        ///                &lt;p style=&quot;display: table-row;&quot;&gt;
        ///                    {{actor.name}} did {{round3(100*dmgdist.contributedDamage/dmgdist.totalDamage)}}% of its master&apos;s total
        ///                    {{istarget ? &apos;Target&apos; :&apos;&apos;}} damage ({{dmgdist.contributedDamage}})
        ///                &lt;/p&gt;
        ///                &lt;p v-if=&quot;hasBreakbarDamage &amp;&amp; dmgdist.contributedBreakbarDamage &gt; 0&quot; style=&quot;display: table-row;&quot;&gt;
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDamageDistTable {
            get {
                return ResourceManager.GetString("tmplDamageDistTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;target.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{target.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in target.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDamageDistTarget {
            get {
                return ResourceManager.GetString("tmplDamageDistTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li v-for=&quot;base in bases&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;specmode = base&quot; :class=&quot;{active: specmode === base}&quot;&gt;{{ base }}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div&gt;
        ///            &lt;div v-for=&quot;(spec, index) in orderedSpecs&quot; class=&quot;mt-1 mb-1&quot;&gt;
        ///                &lt;div v-show=&quot;specToBase[spec.name] === specmode&quot;&gt;
        ///                    &lt;h3 class=&quot;text-center&quot;&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDamageModifierPersStats {
            get {
                return ResourceManager.GetString("tmplDamageModifierPersStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li v-if=&quot;itemModifiers.length &gt; 0&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: displayMode === 0}&quot; @click=&quot;displayMode = 0&quot;&gt; Gear Based Damage
        ///                    Modifiers &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;commonModifiers.length &gt; 0&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: displayMode === 1}&quot; @click=&quot;displayMode = 1&quot;&gt; Shared Damage
        ///                    Modifiers &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDamageModifierStats {
            get {
                return ResourceManager.GetString("tmplDamageModifierStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th class=&quot;stat-cell&quot; v-for=&quot;modifier in modifiers&quot; :data-original-title=&quot;modifier.name + &apos;&lt;br&gt;&apos; + modifier.tooltip&quot;&gt;
        ///                        &lt;img :src=&quot;modifier.icon&quot; :alt [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDamageModifierTable {
            get {
                return ResourceManager.GetString("tmplDamageModifierTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th&gt;Account&lt;/th&gt;
        ///                    &lt;th v-show=&quot;!targetless&quot; data-original-title=&quot;Power + Condition&quot; class=&quot;damage-cell&quot;&gt;
        ///                        Target &lt;img src=&quot;https:// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDamageTable {
            get {
                return ResourceManager.GetString("tmplDamageTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;damagedist-table-component :dmgdist=&quot;dmgtaken&quot; :tableid=&quot;tableid&quot; :actorindex=&quot;-1&quot; :minionindex=&quot;-1&quot; :istarget=&quot;false&quot; :player=&quot;player&quot;
        ///        :phaseindex=&quot;phaseindex&quot;&gt;
        ///    &lt;/damagedist-table-component&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&apos;dmgtaken-component&apos;, {
        ///        props: [&apos;actorindex&apos;, &quot;player&quot;, &apos;tableid&apos;,
        ///            &apos;phaseindex&apos;
        ///        ],
        ///        template: `${template}`,
        ///        computed: {
        ///            actor: function () {
        ///                return this.player? logData.players[thi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDamageTaken {
            get {
                return ResourceManager.GetString("tmplDamageTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;recaps&quot;&gt;
        ///            &lt;div v-for=&quot;index in phaseRecaps&quot;&gt;
        ///                &lt;h3 v-if=&quot;phaseRecaps.length &gt; 1&quot; class=&quot;text-center&quot;&gt;
        ///                    Death #{{index + 1}}
        ///                &lt;/h3&gt;
        ///                &lt;div v-if=&quot;!recaps[index].toKill&quot;&gt;
        ///                    &lt;h3 class=&quot;text-center&quot;&gt;Player was instantly killed after down&lt;/h3&gt;
        ///                    &lt;div class=&quot;text-center&quot;&gt;
        ///                        Took {{data.totalDamage.down[index]}}
        ///                        damage to g [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDeathRecap {
            get {
                return ResourceManager.GetString("tmplDeathRecap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th&gt;Account&lt;/th&gt;
        ///                    &lt;th class=&quot;damage-cell&quot; data-original-title=&quot;Damage taken&quot; &gt;
        ///                        &lt;img src=&quot;https://wiki.guildwars2.com/images/thumb [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDefenseTable {
            get {
                return ResourceManager.GetString("tmplDefenseTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;      
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot;
        ///            :phaseduration=&quot;this.phase.end - this.phase.start&quot; :phasehassubphases=&quot;!!this.phase.subPhases&quot; :ignorebreakbar=&quot;false&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;dps-graph-component&quot;, { [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDPSGraph {
            get {
                return ResourceManager.GetString("tmplDPSGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;     
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-wrap justify-content-center mr-3 scale85&quot; :class=&quot;{&apos;flex-row&apos;: !column, &apos;flex-column&apos;: column}&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;data.dpsmode = 0&quot; :class=&quot;{active: data.dpsmode === 0}&quot;&gt;Full&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phaseduration &gt; 4&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;data.dpsmode = 4&quot; :clas [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplDPSGraphModeSelector {
            get {
                return ResourceManager.GetString("tmplDPSGraphModeSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;card fight-summary&quot; style=&quot;min-width: 350px;&quot;&gt;
        ///        &lt;h3 class=&quot;card-header text-center&quot;&gt;{{ encounter.name }}&lt;/h3&gt;
        ///        &lt;div class=&quot;card-body container&quot;&gt;
        ///            &lt;div class=&quot;d-flex flex-row justify-content-center align-items-center&quot;&gt;
        ///                &lt;div class=&quot;d-flex flex-column mr-3 justify-content-center&quot;&gt;
        ///                    &lt;div v-if=&quot;fractalInstabilities&quot; class=&quot;d-flex flex-row justify-content-around&quot;&gt;
        ///                        &lt;img v-for=&quot;fractalInstability in fracta [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplEncounter {
            get {
                return ResourceManager.GetString("tmplEncounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;mt-2&quot;&gt;
        ///        &lt;div v-if=&quot;data.start.length&quot;&gt;
        ///            Started with:
        ///            &lt;ul&gt;
        ///                &lt;li v-for=&quot;initial in data.start&quot;&gt;
        ///                    {{initial.name}} &lt;img class=&quot;icon&quot; :alt=&quot;initial.name&quot; :data-original-title=&quot;initial.description&quot;
        ///                        :src=&quot;initial.icon&quot;&gt;
        ///                    {{initial.stack &gt; 1 ? &quot;(&quot;+initial.stack+&quot;)&quot; : &quot;&quot;}} ({{initial.duration}}
        ///                    seconds remaining)
        ///                &lt;/li&gt;
        ///            &lt;/ul&gt;
        ///        &lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplFood {
            get {
                return ResourceManager.GetString("tmplFood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;!targetless&quot; class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 1&quot; :class=&quot;{active: mode}&quot;&gt;Target&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 0&quot; :class=&quot;{active: !mode }&quot;&gt;All&lt;/a&gt;
        ///                &lt;/li&gt;
        ///            &lt;/ul&gt;
        ///        &lt;/div&gt;
        ///        &lt;table c [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplGameplayTable {
            get {
                return ResourceManager.GetString("tmplGameplayTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-table-component :key=&quot;&apos;gear-buff-stats-table&apos;&quot; :condition=&quot;false&quot; :generation=&quot;false&quot;
        ///            :id=&quot;&apos;gear-buff-stats-table&apos;&quot; :buffs=&quot;gears&quot; :playerdata=&quot;buffData&quot; :sums=&quot;[]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;gear-buff-table-component&quot;, {
        ///        props: [&apos;phaseindex&apos;, &apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        template: `${template}`,
        ///        data: function () {
        ///            r [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplGearBuffTable {
            get {
                return ResourceManager.GetString("tmplGearBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;h2 v-if=&quot;layout.desc&quot; :class=&quot;{&apos;text-center&apos;: phaseindex &gt;= 0}&quot;&gt;{{ layoutName }}&lt;/h2&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li v-for=&quot;tab in layout.tabs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab.active}&quot; @click=&quot;select(tab, layout.tabs)&quot;&gt; {{ tab.name }} &lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;tab in layout.tabs&quot; v-show=&quot;tab.active&quot;&gt;
        ///            &lt;div v-if=&quot;tab.desc&quot;&gt;{{ tab.desc }}&lt;/div&gt;
        ///            &lt;div v-if=&quot;tab.layout&quot;&gt;
        ///               [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplGeneralLayout {
            get {
                return ResourceManager.GetString("tmplGeneralLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;!targetless&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt;Total&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt;Target&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 2}&quot; @click=&quot;mode = 2&quot;&gt;Cleave&lt;/a&gt;
        ///                &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplGraphStats {
            get {
                return ResourceManager.GetString("tmplGraphStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplHealingDistPlayer {
            get {
                return ResourceManager.GetString("tmplHealingDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;actor !== null&quot; class=&quot;mb-1 mt-1&quot;&gt;
        ///            &lt;div v-if=&quot;isminion&quot;&gt;
        ///                &lt;p style=&quot;display: table-row;&quot;&gt;
        ///                    {{actor.name}} did {{round3(100*healingdist.contributedHealing/healingdist.totalHealing)}}% of its master&apos;s total
        ///                    {{istarget ? &apos;Target&apos; :&apos;&apos;}} healing ({{healingdist.contributedHealing}})
        ///                &lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div v-else&gt;
        ///                &lt;p style=&quot;display: table-row;&quot;&gt;
        ///                [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplHealingDistTable {
            get {
                return ResourceManager.GetString("tmplHealingDistTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1&quot; id=&quot;healing-phase-nav&quot;&gt;
        ///            &lt;phase-component :phases=&quot;logdata.phases&quot;&gt;&lt;/phase-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mb-2 mt-2&quot; id=&quot;healing-actors&quot;&gt;
        ///            &lt;div class=&quot;flex-row justify-content-center align-items-center flex-wrap mr-5&quot;&gt;
        ///                &lt;player-target-component :players=&quot;logdata.players&quot;&gt;&lt;/player-target-component&gt;
        ///            &lt;/div&gt;
        ///            &lt;div  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplHealingExtensionView {
            get {
                return ResourceManager.GetString("tmplHealingExtensionView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt;Total&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt;Target&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 2}&quot; @click=&quot;mode = 2&quot;&gt;Cleave&lt;/a&gt;
        ///                &lt;/li&gt;
        ///            &lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplHealingGraphStats {
            get {
                return ResourceManager.GetString("tmplHealingGraphStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Outgoing Healing Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Incoming Healing Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;outgoing-healing-stats-component v-if=&quot;tab === 0&quot; :key=&quot;&apos;healing&apos;&quot; :phaseindex=&quot;phaseindex&quot;
        ///                :playerindex= [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplHealingStatTables {
            get {
                return ResourceManager.GetString("tmplHealingStatTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;healingdist-table-component :healingdist=&quot;healingtaken&quot; :tableid=&quot;tableid&quot; :actorindex=&quot;-1&quot; :minionindex=&quot;-1&quot; :istarget=&quot;false&quot; :player=&quot;true&quot;
        ///        :phaseindex=&quot;phaseindex&quot;&gt;
        ///    &lt;/healingdist-table-component&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&apos;healingtaken-component&apos;, {
        ///        props: [&apos;actorindex&apos;, &apos;tableid&apos;,
        ///            &apos;phaseindex&apos;
        ///        ],
        ///        template: `${template}`,
        ///        computed: {
        ///            healingtaken: function () {
        ///                return healingStatsExtension.p [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplHealingTaken {
            get {
                return ResourceManager.GetString("tmplHealingTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;      
        ///        &lt;hps-graph-mode-selector-component :data=&quot;graphhealingdata&quot;
        ///            :phaseduration=&quot;this.phase.end - this.phase.start&quot; :phasehassubphases=&quot;!!this.phase.subPhases&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/hps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;hps-graph-component&quot;, {
        ///        props: [ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplHPSGraph {
            get {
                return ResourceManager.GetString("tmplHPSGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;     
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-wrap justify-content-center mr-3 scale85&quot; :class=&quot;{&apos;flex-row&apos;: !column, &apos;flex-column&apos;: column}&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;data.hpsmode = 0&quot; :class=&quot;{active: data.hpsmode === 0}&quot;&gt;Full&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phaseduration &gt; 4&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;data.hpsmode = 4&quot; :clas [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplHPSGraphModeSelector {
            get {
                return ResourceManager.GetString("tmplHPSGraphModeSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th&gt;Account&lt;/th&gt;
        ///                    &lt;th class=&quot;damage-cell&quot; data-original-title=&quot;Healed&quot;&gt;
        ///                        &lt;img src=&quot;https://wiki.guildwars2.com/images/thumb/f/f3/H [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplIncomingHealingTable {
            get {
                return ResourceManager.GetString("tmplIncomingHealingTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot;&gt;
        ///    &lt;link id=&quot;theme&quot; rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/bootswatch/4.1.1/${bootstrapTheme}/bootstrap.min.css&quot;
        ///          crossorigin=&quot;anonymous&quot;&gt;
        ///    &lt;!--${Css}--&gt;
        ///    &lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans&quot; rel=&quot;stylesheet&quot;&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplMain {
            get {
                return ResourceManager.GetString("tmplMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1&quot; id=&quot;phase-nav&quot;&gt;
        ///            &lt;phase-component :phases=&quot;logdata.phases&quot;&gt;&lt;/phase-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mb-2 mt-2&quot; id=&quot;actors&quot;&gt;
        ///            &lt;div v-if=&quot;hasTargets&quot; v-show=&quot;tab !== 5&quot; :class=&quot;{&apos;d-flex&apos;: tab !== 5}&quot;
        ///                class=&quot;flex-row justify-content-center align-items-center flex-wrap mr-5&quot;&gt;
        ///                &lt;target-component :targets=&quot;logdata.targets&quot; :p [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplMainView {
            get {
                return ResourceManager.GetString("tmplMainView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table v-if=&quot;playerMechHeader.length &gt; 0&quot; class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; :id=&quot;tablePid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Player&lt;/th&gt;
        ///                    &lt;th class=&quot;stat-cell&quot; v-for=&quot;mech in playerMechHeader&quot; :data-original-title=&quot;mech.description&quot;&gt;
        ///                        {{ mech.shortName}}
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplMechanicsTable {
            get {
                return ResourceManager.GetString("tmplMechanicsTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th&gt;Account&lt;/th&gt;
        ///                    &lt;th data-original-title=&quot;All&quot; class=&quot;damage-cell&quot;&gt;
        ///                        Target &lt;img src=&quot;https://wiki.guildwars2.com/images/thumb/f/ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplOutgoingHealingTable {
            get {
                return ResourceManager.GetString("tmplOutgoingHealingTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li v-for=&quot;base in bases&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;mode = base&quot; :class=&quot;{active: mode === base}&quot;&gt;{{ base }}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;(spec, id) in orderedSpecs&quot; class=&quot;mt-1 mb-1&quot;&gt;
        ///            &lt;div v-show=&quot;specToBase[spec.name] === mode&quot;&gt;
        ///                &lt;h3 class=&quot;text-center&quot;&gt;{{ spec.name }}&lt;/h3&gt;
        ///                &lt;buf [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPersonalBuffTable {
            get {
                return ResourceManager.GetString("tmplPersonalBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul v-if=&quot;showNormalPhases&quot; class=&quot;nav nav-pills d-flex flex-row justify-content-center&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot; v-for=&quot;(phase, id) in phases&quot; v-show=&quot;!getPhaseData(id).breakbarPhase &amp;&amp; !getPhaseData(id).dummy&quot;
        ///                :data-original-title=&quot;getPhaseData(id).durationS + &apos; seconds&apos;&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;select(phase)&quot; :class=&quot;{active: phase.active}&quot;&gt;{{getPhaseData(id).name}}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-if=&quot;hasBreakba [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPhase {
            get {
                return ResourceManager.GetString("tmplPhase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;h3 v-for=&quot;player in players&quot; :key=&quot;player.id&quot; v-show=&quot;player.id === activeplayer&quot;
        ///            class=&quot;text-center mt-2&quot;&gt;&lt;img :alt=&quot;player.profession&quot; class=&quot;icon&quot; :src=&quot;player.icon&quot;&gt;{{player.name}}&lt;/h3&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot; v-show=&quot;activeplayer &gt; -1&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tabmode === 0}&quot; @click=&quot;tabmode = 0&quot;&gt;
        ///                    Outgoing Healing
        ///                    Distribution
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayerHealingStats {
            get {
                return ResourceManager.GetString("tmplPlayerHealingStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;healingdist-player-component v-if=&quot;tabmode === 0&quot; :key=&quot;&apos;healingdist&apos; + playerindex&quot; :playerindex=&quot;playerindex&quot;
        ///                :phaseindex=&quot;phaseindex&quot; :activetargets=&quot;activetargets&quot;&gt;&lt;/healingdist-player-component&gt;
        ///            &lt;healingtaken-component v-if=&quot;tabmode ===1&quot; :key=&quot;&apos;healingtaken&apos; + playerindex&quot; :actorindex=&quot;playerindex&quot;
        ///                :tableid=&quot;&apos;healingtaken-player-&apos;+playerindex&quot; :phaseindex=&quot;phaseindex&quot;&gt;&lt;/healingtaken-component&gt;
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayerHealingTab {
            get {
                return ResourceManager.GetString("tmplPlayerHealingTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;hps-graph-mode-selector-component :data=&quot;graphhealingdata&quot;
        ///            :phaseduration=&quot;this.phase.end - this.phase.start&quot; :phasehassubphases=&quot;!!this.phase.subPhases&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/hps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///        &lt;rotation-legend-component&gt;&lt;/rotation-legend-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayerHealingTabGraph {
            get {
                return ResourceManager.GetString("tmplPlayerHealingTabGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row&quot;&gt;
        ///        &lt;img class=&quot;icon mr-1&quot; src=&quot;https://i.imgur.com/nSYuby8.png&quot; :data-original-title=&quot;scoreExpl&quot; /&gt;
        ///        &lt;div class=&quot;d-flex flex-column&quot; style=&quot;max-width: 900px;&quot;&gt;
        ///            &lt;div v-for=&quot;group in groups&quot; class=&quot;d-flex flex-wrap mb-1&quot;&gt;
        ///                &lt;div v-for=&quot;player in group&quot; class=&quot;player-cell d-flex flex-column align-items-center justify-content-center&quot; :class=&quot;{active: player.active}&quot;
        ///                    @click=&quot;select(player.id)&quot;&gt;
        ///                 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayers {
            get {
                return ResourceManager.GetString("tmplPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;data&quot;&gt;&lt;/graph-component&gt;
        ///        &lt;rotation-legend-component&gt;&lt;/rotation-legend-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///
        ///    function getActorsRotationLayout(images, color, players, phase) {
        ///        var layout = {
        ///            barmode: &apos;stack&apos;,
        ///            legend: {
        ///                traceorder: &apos;reversed&apos;
        ///            },
        ///            hovermode: &apos;x&apos;,
        ///            hoverdistance: 50,
        ///            images: images,
        ///            font: { [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayersRotation {
            get {
                return ResourceManager.GetString("tmplPlayersRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column align-items-center justify-content-center&quot;&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;Players&apos; Rotation&lt;/h3&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;player-rotations-component v-for=&apos;(phase, index) in phases&apos; :key=&quot;&apos;rotations&apos; + index&quot;
        ///                v-if=&quot;index === phaseindex&quot; :phaseindex=&quot;phaseindex&quot; :light=&quot;light&quot; :playerindex=&quot;playerindex&quot;&gt;
        ///                &lt;/player-rotation-component&gt;
        ///        &lt;/keep-alive&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///
        ///    Vue.component(&quot;play [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayersRotationTab {
            get {
                return ResourceManager.GetString("tmplPlayersRotationTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;h3 v-for=&quot;player in players&quot; :key=&quot;player.id&quot; v-show=&quot;player.id === activeplayer&quot;
        ///            class=&quot;text-center mt-2&quot;&gt;&lt;img :alt=&quot;player.profession&quot; class=&quot;icon&quot; :src=&quot;player.icon&quot;&gt;{{player.name}}&lt;/h3&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot; v-show=&quot;activeplayer &gt; -1&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tabmode === 0}&quot; @click=&quot;tabmode = 0&quot;&gt;
        ///                    Outgoing Damage
        ///                    Distribution
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayerStats {
            get {
                return ResourceManager.GetString("tmplPlayerStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;dmgdist-player-component v-if=&quot;tabmode === 0&quot; :key=&quot;&apos;dist&apos; + playerindex&quot; :playerindex=&quot;playerindex&quot;
        ///                :phaseindex=&quot;phaseindex&quot; :activetargets=&quot;activetargets&quot;&gt;&lt;/dmgdist-player-component&gt;
        ///            &lt;dmgtaken-component v-if=&quot;tabmode ===1&quot; :key=&quot;&apos;taken&apos; + playerindex&quot; :actorindex=&quot;playerindex&quot; :player=&quot;true&quot;
        ///                :tableid=&quot;&apos;dmgtaken-player-&apos;+playerindex&quot; :phaseindex=&quot;phaseindex&quot;&gt;&lt;/dmgtaken-component&gt;
        ///            &lt;player-graph-tab [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayerTab {
            get {
                return ResourceManager.GetString("tmplPlayerTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot; :phaseduration=&quot;this.phase.end - this.phase.start&quot;
        ///            :phasehassubphases=&quot;!!this.phase.subPhases&quot; :ignorebreakbar=&quot;false&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///        &lt;rotation-legend-component&gt;&lt;/rotation-legend-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/temp [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplPlayerTabGraph {
            get {
                return ResourceManager.GetString("tmplPlayerTabGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;card&quot;&gt;
        ///        &lt;div class=&quot;card-body container&quot;&gt;
        ///            &lt;p&gt;&lt;u&gt;Fill&lt;/u&gt;&lt;/p&gt;
        ///            &lt;span style=&quot;padding: 2px; background-color:#0000FF; border-style:solid; border-width: 1px; border-color:#000000; color:#FFFFFF&quot;&gt;
        ///                Hit
        ///                without aftercast
        ///            &lt;/span&gt;
        ///            &lt;span style=&quot;padding: 2px; background-color:#00FF00; border-style:solid; border-width: 1px; border-color:#000000; color:#000000&quot;&gt;
        ///                Hit
        ///                with full a [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplRotationLegend {
            get {
                return ResourceManager.GetString("tmplRotationLegend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills mr-1 scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;autoattack = !autoattack&quot; :class=&quot;{active: autoattack}&quot;&gt;Show auto
        ///                        attacks&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;hideInterruptedAA = !hideInterruptedAA&quot;
        ///                        :class=&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplSimpleRotation {
            get {
                return ResourceManager.GetString("tmplSimpleRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Damage Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Gameplay Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 2}&quot; @click=&quot;tab = 2&quot;&gt;Defensive Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-lin [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplStatTables {
            get {
                return ResourceManager.GetString("tmplStatTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th&gt;Account&lt;/th&gt;
        ///                    &lt;th class=&quot;stat-cell&quot; data-original-title=&quot;Condition Cleanse on Others&quot; &gt;
        ///                        &lt;img src=&quot;https://wiki.guildwars2.com [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplSupportTable {
            get {
                return ResourceManager.GetString("tmplSupportTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center align-items-center mb-2&quot;&gt;
        ///        &lt;img v-if=&quot;target.health &gt; 0&quot; src=&quot;https://wiki.guildwars2.com/images/b/be/Vitality.png&quot; alt=&quot;Health&quot;
        ///            class=&quot;icon&quot; :data-original-title=&quot;&apos;Health: &apos; + target.health&quot;&gt;
        ///        &lt;img v-if=&quot;target.tough &gt; 0&quot; src=&quot;https://wiki.guildwars2.com/images/1/12/Toughness.png&quot; alt=&quot;Toughness&quot;
        ///            class=&quot;icon&quot; hbHeight :data-original-title=&quot;&apos;Toughness: &apos; + target.tough&quot;&gt;
        ///        &lt;img v-if=&quot;target.hbWidth  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplTargetData {
            get {
                return ResourceManager.GetString("tmplTargetData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-column&quot;&gt;
        ///            &lt;div v-for=&quot;group in groups&quot; class=&quot;d-flex flex-row mb-1 align-items-center&quot;&gt;
        ///                &lt;div&gt;
        ///                    &lt;ul class=&quot;scale85 nav nav-pills&quot;&gt;
        ///                        &lt;li class=&quot;nav-item&quot;&gt;
        ///                            &lt;a class=&quot;nav-link&quot; @click=&quot;selectGroup(group)&quot;&gt;
        ///                                Select
        ///                            &lt;/a&gt;
        ///                        &lt;/li&gt;
        ///                    &lt;/ul&gt;
        ///                &lt;/div&gt;
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplTargetPlayers {
            get {
                return ResourceManager.GetString("tmplTargetPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center flex-wrap&quot; style=&quot;max-width: 500px;&quot;&gt;
        ///        &lt;div v-for=&quot;(target, id) in targets&quot; v-show=&quot;show(id)&quot;&gt;
        ///            &lt;img class=&quot;icon-lg mr-2 ml-2 target-cell&quot; :src=&quot;getTargetData(id).icon&quot; :alt=&quot;getTargetData(id).name&quot;
        ///                :data-original-title=&quot;getTargetData(id).name&quot; :class=&quot;{active: target.active}&quot;
        ///                @click=&quot;target.active = !target.active&quot;&gt;
        ///            &lt;target-data-component :targetid=&quot;id&quot;&gt;&lt;/target-data-component&gt;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplTargets {
            get {
                return ResourceManager.GetString("tmplTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul v-if=&quot;phaseTargets.length &gt; 1&quot; class=&quot; nav nav-tabs&quot;&gt;
        ///            &lt;li v-for=&quot;target in phaseTargets&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: simplephase.focus === target.id}&quot;
        ///                    @click=&quot;simplephase.focus = target.id&quot;&gt;
        ///                    {{target.name}}
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;target in phaseTargets&quot; v-show=&quot;simplephase.focus === target.id&quot;&gt;
        ///            &lt;div class=&quot;d-flex flex-row justify-content [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplTargetStats {
            get {
                return ResourceManager.GetString("tmplTargetStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;dmgdist-target-component v-if=&quot;mode === 0&quot; :key=&quot;&apos;dist&apos; + targetindex&quot; :phaseindex=&quot;phaseindex&quot;
        ///                :targetindex=&quot;targetindex&quot;&gt;&lt;/dmgdist-target-component&gt;
        ///            &lt;dmgtaken-component v-if=&quot;mode === 1&quot; :actorindex=&quot;targetindex&quot; :player=&quot;false&quot; :key=&quot;&apos;taken&apos; + targetindex&quot;
        ///                :tableid=&quot;&apos;dmgtaken-target-&apos;+targetindex&quot; :phaseindex=&quot;phaseindex&quot;&gt;&lt;/dmgtaken-component&gt;
        ///            &lt;target-graph-tab-component v-for=&quot;(ph, id) in phase [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplTargetTab {
            get {
                return ResourceManager.GetString("tmplTargetTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot; :phaseduration=&quot;this.phase.end - this.phase.start&quot;
        ///            :phasehassubphases=&quot;!!this.phase.subPhases&quot; :ignorebreakbar=&quot;true&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///        &lt;rotation-legend-component&gt;&lt;/rotation-legend-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/templ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string tmplTargetTabGraph {
            get {
                return ResourceManager.GetString("tmplTargetTabGraph", resourceCulture);
            }
        }
    }
}
