//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gw2LogParser.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gw2LogParser.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;use strict&quot;;
        /////// ACTORS
        ///class IconDrawable {
        ///    constructor(start, end, imgSrc, pixelSize) {
        ///        this.pos = null;
        ///        this.start = start;
        ///        this.end = end;
        ///        this.img = new Image();
        ///        this.img.src = imgSrc;
        ///        this.img.onload = function () {
        ///            animateCanvas(noUpdateTime);
        ///        };
        ///        this.pixelSize = pixelSize;
        ///    }
        ///
        ///    getInterpolatedPosition(startIndex, currentIndex) {
        ///        const offsetedIndex = currentIndex - startIndex;
        ///        const positionX = th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string actors {
            get {
                return ResourceManager.GetString("actors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///// const images
        ///&quot;use strict&quot;;
        ///const noUpdateTime = -1;
        ///const updateText = -2;
        ///const deadIcon = new Image();
        ///deadIcon.onload = function () {
        ///    animateCanvas(noUpdateTime);
        ///};
        ///const downIcon = new Image();
        ///downIcon.onload = function () {
        ///    animateCanvas(noUpdateTime);
        ///};
        ///const dcIcon = new Image();
        ///dcIcon.onload = function () {
        ///    animateCanvas(noUpdateTime);
        ///};
        ///const facingIcon = new Image();
        ///facingIcon.onload = function () {
        ///    animateCanvas(noUpdateTime);
        ///};
        ///
        ///function ToRadia [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string animator {
            get {
                return ResourceManager.GetString("animator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .table th {
        ///    border-top: 0;
        ///}
        ///
        ///.form-control {
        ///    padding: 0.300rem 0.4rem;
        ///}
        ///
        ///.theme-slate g.hovertext text.name {
        ///    fill: #cccccc !important;
        ///}
        ///
        ///.theme-yeti g.hovertext text.name {
        ///    fill: #495057 !important;
        ///}
        ///
        ///.theme-slate g.hovertext rect {
        ///    fill: #272B30 !important;
        ///    fill-opacity: 0.9 !important;
        ///}
        ///
        ///.theme-yeti g.hovertext rect {
        ///    fill: #fff !important;
        ///    fill-opacity: 0.9 !important;
        ///}
        ///
        ///.scrollable-y {
        ///    overflow-y: auto;
        ///    overflow-x: hidden;
        ///}
        ///
        ///.theme-yeti ::-webkit-scrollbar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string css {
            get {
                return ResourceManager.GetString("css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //// BASE MECHANIC
        ///class MechanicDrawable {
        ///    constructor(start, end, connectedTo) {
        ///        this.start = start;
        ///        this.end = end;
        ///        this.connectedTo = connectedTo;
        ///        this.master = null;
        ///    }
        ///
        ///    draw() {
        ///        // to override
        ///    }
        ///
        ///    getPosition() {
        ///        if (this.connectedTo === null) {
        ///            return null;
        ///        }
        ///        var time = animator.reactiveDataStatus.time;
        ///        if (this.start !== -1 &amp;&amp; (this.start &gt;= time || this.end &lt;= time)) {
        ///            return null;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string decorations {
            get {
                return ResourceManager.GetString("decorations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///function computeGradient(left, percent) {
        ///    var template = &quot;linear-gradient(to right, $fill$, $middle$, $black$)&quot;;
        ///    var res = percent;
        ///    var fillPercent = left + &quot; &quot; + res + &quot;%&quot;;
        ///    var blackPercent = &quot;black &quot; + (100 - res) + &quot;%&quot;;
        ///    var middle = res + &quot;%&quot;;
        ///    template = template.replace(&quot;$fill$&quot;, fillPercent);
        ///    template = template.replace(&quot;$black$&quot;, blackPercent);
        ///    template = template.replace(&quot;$middle$&quot;, middle);
        ///    return template;
        ///};
        ///
        ///function compu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string functions {
            get {
                return ResourceManager.GetString("functions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///let apiRenderServiceOkay = true;
        ///
        ///$.extend($.fn.dataTable.defaults, {
        ///    searching: false,
        ///    ordering: true,
        ///    paging: false,
        ///    retrieve: true,
        ///    dom: &quot;t&quot;
        ///});
        ///
        ///const DataTypes = {
        ///    damageTable: 0,
        ///    defTable: 1,
        ///    supTable: 2,
        ///    gameplayTable: 3,
        ///    mechanicTable: 4,
        ///    boonTable: 5,
        ///    offensiveBuffTable: 6,
        ///    supportBuffTable: 7,
        ///    defensiveBuffTable: 8,
        ///    personalBuffTable: 9,
        ///    playerTab: 10,
        ///    targetTab: 11,
        ///    dpsGraph: 12,
        ///    dm [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string global {
            get {
                return ResourceManager.GetString("global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///function compileTemplates() {
        ///    Vue.component(&quot;graph-component&quot;, {
        ///        props: [&apos;id&apos;, &apos;layout&apos;, &apos;data&apos;],
        ///        template: &apos;&lt;div :id=&quot;id&quot; class=&quot;d-flex flex-row justify-content-center&quot;&gt;&lt;/div&gt;&apos;,
        ///        mounted: function () {
        ///            var div = document.querySelector(this.queryID);
        ///            Plotly.react(div, this.data, this.layout, { showEditInChartStudio: true, plotlyServerURL: &quot;https://chart-studio.plotly.com&quot; });
        ///            var _this = this;
        ///            d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string main_js {
            get {
                return ResourceManager.GetString("main_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;use strict&quot;;
        ///
        ///var roundingComponent = {
        ///    methods: {
        ///        round: function (value) {
        ///            if (isNaN(value)) {
        ///                return 0;
        ///            }
        ///            return Math.round(value);
        ///        },
        ///        round2: function (value) {
        ///            if (isNaN(value)) {
        ///                return 0;
        ///            }
        ///            var mul = 100;
        ///            return Math.round(mul * value) / mul;
        ///        },
        ///        round3: function (value) {
        ///            if (isNaN(value)) {
        ///                return 0;
        ///            } [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string mixins {
            get {
                return ResourceManager.GetString("mixins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div style=&quot;margin: 20px;&quot;&gt;
        ///    &lt;a id=&quot;&lt;!-- Account Name --&gt;&quot; name=&quot;&lt;!-- Account Name --&gt;&quot;&gt;&lt;h3&gt;&lt;!-- Player Name --&gt;&lt;/h3&gt;&lt;/a&gt;
        ///    &lt;nav class=&quot;players&quot;&gt;
        ///        &lt;div class=&quot;nav nav-tabs&quot; role=&quot;tablist&quot;&gt;
        ///            &lt;a class=&quot;nav-item nav-link active&quot; data-toggle=&quot;tab&quot; href=&quot;#nav-&lt;!-- Account Name --&gt;-damage&quot; role=&quot;tab&quot;&gt;Damage Distribution&lt;/a&gt;
        ///            &lt;a class=&quot;nav-item nav-link&quot; data-toggle=&quot;tab&quot; href=&quot;#nav-&lt;!-- Account Name --&gt;-defense&quot; role=&quot;tab&quot;&gt;Damage Taken&lt;/a&gt;
        ///        &lt;/div&gt;
        ///    &lt;/nav&gt;
        ///    &lt;d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string player_summary {
            get {
                return ResourceManager.GetString("player_summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!doctype html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;!-- Required meta tags --&gt;
        ///    &lt;meta charset=&quot;utf-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;
        ///
        ///    &lt;!-- Bootstrap CSS --&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css&quot; integrity=&quot;sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh&quot; crossorigin=&quot;anonymous&quot;&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.datatables.net/1.10.20/c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string template_html {
            get {
                return ResourceManager.GetString("template_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 0&quot; :class=&quot;{active: mode === 0}&quot;&gt;Uptime&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 1&quot; :class=&quot;{active: mode === 1 }&quot;&gt;Generation Self&lt;/a&gt;
        ///                &lt;/li&gt;
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffStats {
            get {
                return ResourceManager.GetString("tmplBuffStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div&gt;
        ///            &lt;h3 class=&quot;text-center&quot;&gt;Conditions&lt;/h3&gt;
        ///            &lt;buff-table-component :condition=&quot;true&quot; :generation=&quot;true&quot; :id=&quot;&apos;condition-stats-table-&apos; + target.id&quot; :buffs=&quot;conditions&quot;
        ///                :playerdata=&quot;condiData&quot; :sums=&quot;condiSums&quot; :playerindex=&quot;playerindex&quot;&gt;&lt;/buff-table-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-show=&quot;hasBoons&quot; class=&quot;mt-2&quot;&gt;
        ///            &lt;h3 class=&quot;text-center&quot;&gt;Boons&lt;/h3&gt;
        ///            &lt;buff-table-component :condition=&quot;false&quot; :generation=&quot;false&quot; :i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffStatsTarget {
            get {
                return ResourceManager.GetString("tmplBuffStatsTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div v-if=&quot;buffs.length &gt; 0&quot;&gt;
        ///        &lt;img v-if=&quot;generation&quot; class=&quot;mb-1 icon&quot; src=&quot;https://i.imgur.com/nSYuby8.png&quot;
        ///            :data-toggle="tooltip" title=&quot;tooltipExpl&quot; /&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;id&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th&gt;Sub&lt;/th&gt;
        ///                    &lt;th&gt;&lt;/th&gt;
        ///                    &lt;th&gt;Name&lt;/th&gt;
        ///                    &lt;th v-for=&quot;buff in buffs&quot;
        ///                        :data-original-titl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffTable {
            get {
                return ResourceManager.GetString("tmplBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-end&quot; :style=&quot;{&apos;height&apos;: height}&quot;&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Fight Specifics&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-display :buffarray=&quot;data.fightSpecifics&quot;&gt;&lt;/combat-replay-buff-display&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Others&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-display :buffarray=&quot;data.others&quot;&gt;&lt;/combat-replay-buff-display&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Conditions&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-display :buffarray=&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayActorBuffStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayActorBuffStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex align-items-center actor-rotation&quot;&gt;
        ///        &lt;div v-if=&quot;rotation.current&quot;&gt;
        ///            &lt;img :src=&quot;rotation.current.skill.icon&quot; :alt=&quot;rotation.current.skill.name&quot; :title=&quot;rotation.current.skill.name&quot;
        ///                class=&quot;icon-ll&quot; :class=&quot;{&apos;rot-cancelled&apos;: rotation.current.end === 2}&quot;&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-else class=&quot;empty-icon-ll&quot;&gt;
        ///    
        ///        &lt;/div&gt;
        ///        &lt;div v-for=&quot;next in rotation.nexts&quot;&gt;
        ///            &lt;img :src=&quot;next.skill.icon&quot; :alt=&quot;next.skill.name&quot; :title [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayActorRotation {
            get {
                return ResourceManager.GetString("tmplCombatReplayActorRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center flex-wrap&quot; :style=&quot;{&apos;width&apos;: Math.max(canvas.x, canvas.y) + &apos;px&apos;}&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-column justify-content-center align-items-center&quot; :style=&quot;{&apos;width&apos;: &apos;100%&apos;, &apos;min-width&apos;: canvas.x + &apos;px&apos;, &apos;height&apos;: canvas.y + &apos;px&apos;, &apos;position&apos;: &apos;relative&apos;}&quot;&gt;
        ///            &lt;canvas :width=&quot;canvas.x + &apos;px&apos;&quot; :height=&quot;canvas.y + &apos;px&apos;&quot; id=&quot;main-canvas&quot; class=&quot;replay&quot;&gt;&lt;/canvas&gt;
        ///            &lt;canvas :width=&quot;canvas.x + &apos;px&apos;&quot; :height=&quot;canvas.y + &apos;px&apos;&quot;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayAnimationControl {
            get {
                return ResourceManager.GetString("tmplCombatReplayAnimationControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center&quot;&gt;
        ///        &lt;combat-replay-damage-stats-component :time=&quot;time&quot; :playerindex=&quot;playerindex&quot;&gt;
        ///        &lt;/combat-replay-damage-stats-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;combat-replay-damage-data-component&quot;, {
        ///        template: `${template}`,
        ///        props: [&quot;time&quot;, &quot;selectedplayer&quot;, &quot;selectedplayerid&quot;],
        ///        computed: {
        ///            playerindex: function () {
        ///                if (this.selectedplayer) {
        ///                 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayDamageData {
            get {
                return ResourceManager.GetString("tmplCombatReplayDamageData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;damageMode = 0&quot; :class=&quot;{active: damageMode === 0}&quot;&gt;Damage&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;damageMode = 1&quot; :class=&quot;{active: damageMode === 1}&quot;&gt;DPS&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div class=&quot;scrollable-cr-dps-table&quot;&gt;
        ///            &lt;table class=&quot;table table-sm t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayDamageTable {
            get {
                return ResourceManager.GetString("tmplCombatReplayDamageTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center align-items-center&quot;&gt;
        ///        &lt;div class=&quot;form-check mb-2&quot;&gt;
        ///            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;subgroupCheck&quot; checked v-on:change=&quot;getAnimator().toggleHighlightSelectedGroup()&quot;&gt;
        ///            &lt;label class=&quot;form-check-label&quot; for=&quot;subgroupCheck&quot;&gt;Highlight Selected Group&lt;/label&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center&quot;&gt;
        ///            &lt;div class=&quot;mr-3&quot;&gt;
        ///                &lt;h3&gt;Range Selecto [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayExtraDecorations {
            get {
                return ResourceManager.GetString("tmplCombatReplayExtraDecorations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-center&quot;&gt;
        ///        &lt;div class=&quot;combat-replay-mechanics-list-container d-flex d-flex-row justify-content-center w-100 scrollable-y&quot; style=&quot;max-width:450px&quot;&gt;
        ///            &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///                &lt;thead&gt;
        ///                    &lt;tr&gt;
        ///                        &lt;th style=&quot;min-width:80px&quot;&gt;Time&lt;/th&gt;
        ///                        &lt;th style=&quot;min-width:120px&quot; class=&quot;tex [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayMechanicsList {
            get {
                return ResourceManager.GetString("tmplCombatReplayMechanicsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-start mb-2&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-column scrollable-y&quot; style=&quot;max-height: 250px;&quot;&gt;
        ///            &lt;div v-for=&quot;group in groups&quot; class=&quot;d-flex flex-row align-items-center ml-2 mt-1&quot; style=&quot;width:450px;&quot;&gt;
        ///                &lt;h5 class=&quot;mt-2&quot; style=&quot;min-width:80px;max-width:80px;&quot;&gt;Group {{group.id}}&lt;/h5&gt;
        ///                &lt;div class=&quot;d-flex flex-row flex-wrap align-items-center ml-1&quot; style=&quot;max-width:370px;&quot;&gt;
        ///              [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayPlayerSelect {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayerSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-start mb-2&quot;&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1 scale85&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: buffs}&quot; @click=&quot;buffs = !buffs&quot;&gt;
        ///                    Show Buffs
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: rotation}&quot; @click=&quot;rotation = !rotation&quot;&gt;Show R [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayPlayersStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayersStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;combat-replay-actor-buffs-stats-component v-if=&quot;buffs &amp;&amp; buffstoshow.length &gt; 0&quot; :time=&quot;time&quot; :actorindex=&quot;playerindex&quot; :enemy=&quot;false&quot; :buffstoshow=&quot;buffstoshow&quot;&gt;&lt;/combat-replay-actor-buffs-stats-component&gt;
        ///        &lt;div class=&quot;d-flex mb-1 mt-1 align-items-center player-status-rotation&quot;&gt;
        ///            &lt;combat-replay-player-status-component :time=&quot;time&quot; :playerindex=&quot;playerindex&quot;&gt;&lt;/combat-replay-player-status-component&gt;
        ///            &lt;combat-replay-actor-rotation-component v-if=&quot;rota [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayPlayerStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayerStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;player-status&quot; :style=&quot;{&apos;background&apos;: getGradient(time, status)}&quot;&gt;
        ///        &lt;h6 class=&quot;actor-shorten text-center&quot; :title=&quot;player.name&quot;&gt;
        ///            &lt;img :src=&quot;player.icon&quot; :alt=&quot;player.profession&quot; height=&quot;18&quot; width=&quot;18&quot;&gt;
        ///            {{player.name}}
        ///        &lt;/h6&gt;
        ///        &lt;p v-if=&quot;hasHealth&quot; class=&quot;text-right cr-hp-display cr-hp-display-player&quot;&gt;
        ///            {{(Math.round(100*getPercent(time))/100).toFixed(2)}} %
        ///        &lt;/p&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;combat- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayPlayerStatus {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayerStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center&quot;&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt;Players&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;!targetless&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt;Targets&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///              [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayStatusData {
            get {
                return ResourceManager.GetString("tmplCombatReplayStatusData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1 scale65&quot;&gt;
        ///            &lt;li v-for=&quot;(buffType, index) in possibleBuffs&quot; class=&quot;ml-1 mr-1&quot;&gt;
        ///                &lt;input :id=&quot;&apos;crtar-possibleBuffs-&apos; + index&quot; type=&quot;checkbox&quot; :value=&quot;buffType&quot; v-model=&quot;buffsToShow&quot; /&gt;
        ///                &lt;label :for=&quot;&apos;crtar-possibleBuffs-&apos; + index&quot;&gt;{{buffType}}&lt;/label&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div class=&quot;mt-1 combat-actor-status-container scrollable-y&quot;&gt;
        ///            &lt;div class= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayTargetsStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetsStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;combat-replay-actor-buffs-stats-component v-if=&quot;buffstoshow.length &gt; 0&quot; :time=&quot;time&quot; :actorindex=&quot;targetindex&quot; :enemy=&quot;true&quot; :buffstoshow=&quot;buffstoshow&quot;&gt;&lt;/combat-replay-actor-buffs-stats-component&gt;
        ///        &lt;div class=&quot;d-flex mb-1 mt-1 align-items-center&quot;&gt;
        ///            &lt;combat-replay-target-status-component :time=&quot;time&quot; :targetindex=&quot;targetindex&quot;&gt;&lt;/combat-replay-target-status-component&gt;
        ///        &lt;/div&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;combat-replay-target-stats-c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayTargetStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex d-flex flex-column justify-content-center align-items-center&quot;&gt;
        ///        &lt;div class=&quot;target-status&quot; :style=&quot;{&apos;background&apos;: getGradient(time)}&quot;&gt;
        ///            &lt;h6 class=&quot;actor-shorten text-center&quot; :title=&quot;target.name + &apos; - &apos; + target.health + &apos; health&apos;&quot;&gt;
        ///                &lt;img :src=&quot;target.icon&quot; height=&quot;18&quot; width=&quot;18&quot;&gt;
        ///                {{target.name}}
        ///            &lt;/h6&gt;
        ///            &lt;p class=&quot;text-right cr-hp-display cr-hp-display-target&quot;&gt;
        ///                {{(Math.round(100*getPercent [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayTargetStatus {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex mt-2 justify-content-center&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-column align-items-center mr-2&quot; style=&quot;margin-left: auto; min-width:450px;&quot;&gt;
        ///            &lt;combat-replay-damage-data-component :time=&quot;animationStatus.time&quot;
        ///                :selectedplayer=&quot;animationStatus.selectedPlayer&quot; :selectedplayerid=&quot;animationStatus.selectedPlayerID&quot;&gt;
        ///            &lt;/combat-replay-damage-data-component&gt;
        ///            &lt;combat-replay-player-select-component :selectedplayerid=&quot;animationStatus.selec [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayUI {
            get {
                return ResourceManager.GetString("tmplCombatReplayUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageDistPlayer {
            get {
                return ResourceManager.GetString("tmplDamageDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;actor !== null&quot;&gt;
        ///            &lt;div v-if=&quot;isminion&quot;&gt;
        ///                {{actor.name}} did {{round3(100*dmgdist.contributedDamage/dmgdist.totalDamage)}}% of its master&apos;s total
        ///                {{istarget ? &apos;Target&apos; :&apos;&apos;}} dps
        ///            &lt;/div&gt;
        ///            &lt;div v-else&gt;
        ///                {{actor.name}} did {{round3(100*dmgdist.contributedDamage/dmgdist.totalDamage)}}% of its total {{istarget ?
        ///                &apos;Target&apos; :&apos;&apos;}} dps
        ///            &lt;/div&gt;
        ///        &lt;/div&gt;
        ///        &lt;table c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageDistTable {
            get {
                return ResourceManager.GetString("tmplDamageDistTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;target.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{target.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in target.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot; @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///            &lt;/ul&gt;
        ///        &lt;/div&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageDistTarget {
            get {
                return ResourceManager.GetString("tmplDamageDistTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li v-for=&quot;base in bases&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;specmode = base&quot; :class=&quot;{active: specmode === base}&quot;&gt;{{ base }}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div&gt;
        ///            &lt;div v-for=&quot;(spec, index) in orderedSpecs&quot; class=&quot;mt-1 mb-1&quot;&gt;
        ///                &lt;div v-show=&quot;specToBase[spec.name] === specmode&quot;&gt;
        ///                    &lt;h3 class=&quot;text-center&quot;&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageModifierPersStats {
            get {
                return ResourceManager.GetString("tmplDamageModifierPersStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li v-if=&quot;itemModifiers.length &gt; 0&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: displayMode === 0}&quot; @click=&quot;displayMode = 0&quot;&gt; Gear Based Damage
        ///                    Modifiers &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;commonModifiers.length &gt; 0&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: displayMode === 1}&quot; @click=&quot;displayMode = 1&quot;&gt; Shared Damage
        ///                    Modifiers &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageModifierStats {
            get {
                return ResourceManager.GetString("tmplDamageModifierStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;id&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th&gt;Sub&lt;/th&gt;
        ///                    &lt;th&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th v-for=&quot;modifier in modifiers&quot; :data-toggle="tooltip" title=&quot;modifier.name + &apos;&lt;br&gt;&apos; + modifier.tooltip&quot;&gt;
        ///                        &lt;img :src=&quot;modifier.icon&quot; :alt=&quot;modifier.name&quot; class=&quot;icon icon-hover&quot;&gt;
        ///                 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageModifierTable {
            get {
                return ResourceManager.GetString("tmplDamageModifierTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; id=&quot;dps-table&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th&gt;Sub&lt;/th&gt;
        ///                    &lt;th&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th&gt;Account&lt;/th&gt;
        ///                    &lt;th v-show=&quot;!targetless&quot; v-if=&quot;!showDamage&quot;&gt;Target DPS&lt;/th&gt;
        ///                    &lt;th v-show=&quot;!targetless&quot; v-else&gt;Target Damage&lt;/th&gt;
        ///                    &lt;th v-show=&quot;!targe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageTable {
            get {
                return ResourceManager.GetString("tmplDamageTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;damagedist-table-component :dmgdist=&quot;dmgtaken&quot; :tableid=&quot;tableid&quot; :actor=&quot;null&quot; :isminion=&quot;false&quot; :istarget=&quot;false&quot;
        ///        :phaseindex=&quot;phaseindex&quot;&gt;
        ///    &lt;/damagedist-table-component&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&apos;dmgtaken-component&apos;, {
        ///        props: [&apos;actor&apos;, &apos;tableid&apos;,
        ///            &apos;phaseindex&apos;
        ///        ],
        ///        template: `${template}`,
        ///        computed: {
        ///            dmgtaken: function () {
        ///                return this.actor.details.dmgDistributionsTaken[this.phaseindex];
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageTaken {
            get {
                return ResourceManager.GetString("tmplDamageTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;recaps&quot;&gt;
        ///            &lt;div v-for=&quot;index in phaseRecaps&quot;&gt;
        ///                &lt;h3 v-if=&quot;phaseRecaps.length &gt; 1&quot; class=&quot;text-center&quot;&gt;
        ///                    Death #{{index + 1}}
        ///                &lt;/h3&gt;
        ///                &lt;div v-if=&quot;!recaps[index].toKill&quot;&gt;
        ///                    &lt;h3 class=&quot;text-center&quot;&gt;Player was instantly killed after down&lt;/h3&gt;
        ///                    &lt;div class=&quot;text-center&quot;&gt;
        ///                        Took {{data.totalDamage.down[index]}}
        ///                        damage to g [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDeathRecap {
            get {
                return ResourceManager.GetString("tmplDeathRecap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; id=&quot;def-table&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th&gt;Sub&lt;/th&gt;
        ///                    &lt;th&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th&gt;Account&lt;/th&gt;
        ///                    &lt;th data-toggle="tooltip" title=&quot;Damage taken&quot; &gt;
        ///                        &lt;img src=&quot;https://wiki.guildwars2.com/images/thumb/6/6a/Damage.png/30px-Damage.png&quot; alt=&quot;Damage Taken&quot;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDefenseTable {
            get {
                return ResourceManager.GetString("tmplDefenseTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;dpsmode = 0&quot; :class=&quot;{active: dpsmode === 0}&quot;&gt;Full&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phase.end - phase.start &gt; 10&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;dpsmode = 1&quot; :class=&quot;{active: dpsmode === 1}&quot;&gt;10s&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phase.end - phase.start &gt; 30&quot; class=&quot;nav [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDPSGraph {
            get {
                return ResourceManager.GetString("tmplDPSGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;card fight-summary&quot; style=&quot;min-width: 350px;&quot;&gt;
        ///        &lt;h3 class=&quot;card-header text-center&quot;&gt;{{ encounter.name }}&lt;/h3&gt;
        ///        &lt;div class=&quot;card-body container&quot;&gt;
        ///            &lt;div class=&quot;d-flex flex-row justify-content-center align-items-center&quot;&gt;
        ///                &lt;div class=&quot;d-flex flex-column mr-3 justify-content-center&quot;&gt;
        ///                    &lt;div v-if=&quot;fractalInstabilities&quot; class=&quot;d-flex flex-row justify-content-around&quot;&gt;
        ///                        &lt;img v-for=&quot;fractalInstability in fracta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplEncounter {
            get {
                return ResourceManager.GetString("tmplEncounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;mt-2&quot;&gt;
        ///        &lt;div v-if=&quot;data.start.length&quot;&gt;
        ///            Started with:
        ///            &lt;ul&gt;
        ///                &lt;li v-for=&quot;initial in data.start&quot;&gt;
        ///                    {{initial.name}} &lt;img class=&quot;icon&quot; :alt=&quot;initial.name&quot; :data-toggle="tooltip" title=&quot;initial.description&quot;
        ///                        :src=&quot;initial.icon&quot;&gt;
        ///                    {{initial.stack &gt; 1 ? &quot;(&quot;+initial.stack+&quot;)&quot; : &quot;&quot;}} ({{initial.duration}}
        ///                    seconds remaining)
        ///                &lt;/li&gt;
        ///            &lt;/ul&gt;
        ///        &lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplFood {
            get {
                return ResourceManager.GetString("tmplFood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;!targetless&quot; class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 1&quot; :class=&quot;{active: mode}&quot;&gt;Target&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 0&quot; :class=&quot;{active: !mode }&quot;&gt;All&lt;/a&gt;
        ///                &lt;/li&gt;
        ///            &lt;/ul&gt;
        ///        &lt;/div&gt;
        ///        &lt;table c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplGameplayTable {
            get {
                return ResourceManager.GetString("tmplGameplayTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;h2 v-if=&quot;layout.desc&quot; :class=&quot;{&apos;text-center&apos;: phaseindex &gt;= 0}&quot;&gt;{{ layoutName }}&lt;/h2&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li v-for=&quot;tab in layout.tabs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab.active}&quot; @click=&quot;select(tab, layout.tabs)&quot;&gt; {{ tab.name }} &lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;tab in layout.tabs&quot; v-show=&quot;tab.active&quot;&gt;
        ///            &lt;div v-if=&quot;tab.desc&quot;&gt;{{ tab.desc }}&lt;/div&gt;
        ///            &lt;div v-if=&quot;tab.layout&quot;&gt;
        ///               [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplGeneralLayout {
            get {
                return ResourceManager.GetString("tmplGeneralLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;!targetless&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt;Total&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt;Target&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 2}&quot; @click=&quot;mode = 2&quot;&gt;Cleave&lt;/a&gt;
        ///                &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplGraphStats {
            get {
                return ResourceManager.GetString("tmplGraphStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot;&gt;
        ///    &lt;link id=&quot;theme&quot; rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/bootswatch/4.1.1/${bootstrapTheme}/bootstrap.min.css&quot;
        ///          crossorigin=&quot;anonymous&quot;&gt;
        ///    &lt;!--${Css}--&gt;
        ///    &lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans&quot; rel=&quot;stylesheet&quot;&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplMain {
            get {
                return ResourceManager.GetString("tmplMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1&quot; id=&quot;phase-nav&quot;&gt;
        ///            &lt;phase-component :phases=&quot;logdata.phases&quot;&gt;&lt;/phase-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mb-2 mt-2&quot; id=&quot;actors&quot;&gt;
        ///            &lt;div v-show=&quot;dataType !== datatypes.targetTab&quot; :class=&quot;{&apos;d-flex&apos;:dataType !== datatypes.targetTab}&quot;
        ///                class=&quot;flex-row justify-content-center align-items-center flex-wrap mr-5&quot;&gt;
        ///                &lt;target-component :t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplMainView {
            get {
                return ResourceManager.GetString("tmplMainView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table v-if=&quot;playerMechHeader.length &gt; 0&quot; class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; id=&quot;playermechs&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th width=&quot;30px&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th width=&quot;30px&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Player&lt;/th&gt;
        ///                    &lt;th v-for=&quot;mech in playerMechHeader&quot; :data-toggle="tooltip" title=&quot;mech.description&quot;&gt;
        ///                        {{ mech.shortName}}
        ///                    &lt;/th&gt;
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplMechanicsTable {
            get {
                return ResourceManager.GetString("tmplMechanicsTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li v-for=&quot;base in bases&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;mode = base&quot; :class=&quot;{active: mode === base}&quot;&gt;{{ base }}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;(spec, id) in orderedSpecs&quot; class=&quot;mt-1 mb-1&quot;&gt;
        ///            &lt;div v-show=&quot;specToBase[spec.name] === mode&quot;&gt;
        ///                &lt;h3 class=&quot;text-center&quot;&gt;{{ spec.name }}&lt;/h3&gt;
        ///                &lt;buf [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPersonalBuffTable {
            get {
                return ResourceManager.GetString("tmplPersonalBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div v-if=&quot;phases.length &gt; 1&quot;&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot; v-for=&quot;(phase, id) in phases&quot; v-show=&quot;!getPhaseData(id).breakbarPhase&quot; :data-toggle="tooltip" title=&quot;getPhaseData(id).durationS + &apos; seconds&apos;&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;select(phase)&quot; :class=&quot;{active: phase.active}&quot;&gt;{{getPhaseData(id).name}}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-if=&quot;hasBreakbarPhases&quot; class=&quot;d-flex flew-row justify-co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPhase {
            get {
                return ResourceManager.GetString("tmplPhase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;img class=&quot;icon mb-1&quot; src=&quot;https://i.imgur.com/nSYuby8.png&quot; :data-toggle="tooltip" title=&quot;scoreExpl&quot; /&gt;
        ///        &lt;table class=&quot;table table-sm table-bordered composition&quot;&gt;
        ///            &lt;tbody&gt;
        ///                &lt;tr v-for=&quot;group in groups&quot;&gt;
        ///                    &lt;td v-for=&quot;player in group&quot; class=&quot;player-cell&quot; :class=&quot;{active: player.id === playerindex}&quot;
        ///                        @click=&quot;select(player.id)&quot;&gt;
        ///                        &lt;div&gt;
        ///                            &lt;img :src=&quot;player.icon&quot; :alt=&quot;pl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayers {
            get {
                return ResourceManager.GetString("tmplPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;h3 v-for=&quot;player in players&quot; :key=&quot;player.id&quot; v-if=&quot;!player.isConjure&quot; v-show=&quot;player.id === activeplayer&quot;
        ///            class=&quot;text-center mt-2&quot;&gt;&lt;img :alt=&quot;player.profession&quot; class=&quot;icon&quot; :src=&quot;player.icon&quot;&gt;{{player.name}}&lt;/h3&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot; v-show=&quot;activeplayer &gt; -1&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tabmode === 0}&quot; @click=&quot;tabmode = 0&quot;&gt;
        ///                    Damage
        ///                    Distribution
        ///                &lt;/a&gt;
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerStats {
            get {
                return ResourceManager.GetString("tmplPlayerStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;dmgdist-player-component v-if=&quot;tabmode === 0&quot; :key=&quot;&apos;dist&apos; + playerindex&quot; :playerindex=&quot;playerindex&quot;
        ///                :phaseindex=&quot;phaseindex&quot; :activetargets=&quot;activetargets&quot;&gt;&lt;/dmgdist-player-component&gt;
        ///            &lt;dmgtaken-component v-if=&quot;tabmode ===1&quot; :key=&quot;&apos;taken&apos; + playerindex&quot; :actor=&quot;player&quot;
        ///                :tableid=&quot;&apos;dmgtaken-player-&apos;+playerindex&quot; :phaseindex=&quot;phaseindex&quot;&gt;&lt;/dmgtaken-component&gt;
        ///            &lt;player-graph-tab-component v-for=&quot;(ph, id [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerTab {
            get {
                return ResourceManager.GetString("tmplPlayerTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;dpsmode = 0&quot; :class=&quot;{active: dpsmode === 0}&quot;&gt;Full&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phase.end - phase.start &gt; 10&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;dpsmode = 1&quot; :class=&quot;{active: dpsmode === 1}&quot;&gt;10s&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phase.end - phase.start &gt; 30&quot; class=&quot;nav [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerTabGraph {
            get {
                return ResourceManager.GetString("tmplPlayerTabGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;card&quot;&gt;
        ///        &lt;div class=&quot;card-body container&quot;&gt;
        ///            &lt;p&gt;&lt;u&gt;Fill&lt;/u&gt;&lt;/p&gt;
        ///            &lt;span style=&quot;padding: 2px; background-color:#0000FF; border-style:solid; border-width: 1px; border-color:#000000; color:#FFFFFF&quot;&gt;
        ///                Hit
        ///                without aftercast
        ///            &lt;/span&gt;
        ///            &lt;span style=&quot;padding: 2px; background-color:#00FF00; border-style:solid; border-width: 1px; border-color:#000000; color:#000000&quot;&gt;
        ///                Hit
        ///                with full a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplRotationLegend {
            get {
                return ResourceManager.GetString("tmplRotationLegend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills mr-2 scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;autoattack = !autoattack&quot; :class=&quot;{active: autoattack}&quot;&gt;Show auto
        ///                        attacks&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;hideInterruptedAA = !hideInterruptedAA&quot;
        ///                        :class=&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplSimpleRotation {
            get {
                return ResourceManager.GetString("tmplSimpleRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; id=&quot;sup-table&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th&gt;Sub&lt;/th&gt;
        ///                    &lt;th&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///                    &lt;th&gt;Account&lt;/th&gt;
        ///                    &lt;th data-toggle="tooltip" title=&quot;Condition Cleanse on Others&quot; &gt;
        ///                        &lt;img src=&quot;https://wiki.guildwars2.com/images/1/12/Healing_Spring.png&quot; alt=&quot;Condition Clea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplSupportTable {
            get {
                return ResourceManager.GetString("tmplSupportTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center align-items-center mb-2&quot;&gt;
        ///        &lt;img v-if=&quot;target.health &gt; 0&quot; src=&quot;https://wiki.guildwars2.com/images/b/be/Vitality.png&quot; alt=&quot;Health&quot;
        ///            class=&quot;icon&quot; :data-toggle="tooltip" title=&quot;&apos;Health: &apos; + target.health&quot;&gt;
        ///        &lt;img v-if=&quot;target.tough &gt; 0&quot; src=&quot;https://wiki.guildwars2.com/images/1/12/Toughness.png&quot; alt=&quot;Toughness&quot;
        ///            class=&quot;icon&quot; hbHeight :data-toggle="tooltip" title=&quot;&apos;Toughness: &apos; + target.tough&quot;&gt;
        ///        &lt;img v-if=&quot;target.hbWidth  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetData {
            get {
                return ResourceManager.GetString("tmplTargetData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center flex-wrap&quot;&gt;
        ///        &lt;div v-for=&quot;(target, id) in targets&quot; v-show=&quot;show(id)&quot;&gt;
        ///            &lt;img class=&quot;icon-lg mr-2 ml-2 target-cell&quot; :src=&quot;getTargetData(id).icon&quot; :alt=&quot;getTargetData(id).name&quot;
        ///                :data-toggle="tooltip" title=&quot;getTargetData(id).name&quot; :class=&quot;{active: target.active}&quot;
        ///                @click=&quot;target.active = !target.active&quot;&gt;
        ///            &lt;target-data-component :targetid=&quot;id&quot;&gt;&lt;/target-data-component&gt;
        ///        &lt;/div&gt;
        ///    &lt;/div&gt;
        ///&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargets {
            get {
                return ResourceManager.GetString("tmplTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul v-if=&quot;phaseTargets.length &gt; 1&quot; class=&quot; nav nav-tabs&quot;&gt;
        ///            &lt;li v-for=&quot;target in phaseTargets&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: simplephase.focus === target.id}&quot;
        ///                    @click=&quot;simplephase.focus = target.id&quot;&gt;
        ///                    {{target.name}}
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;target in phaseTargets&quot; v-show=&quot;simplephase.focus === target.id&quot;&gt;
        ///            &lt;div class=&quot;d-flex flex-row justify-content [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetStats {
            get {
                return ResourceManager.GetString("tmplTargetStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;dmgdist-target-component v-if=&quot;mode === 0&quot; :key=&quot;&apos;dist&apos; + targetindex&quot; :phaseindex=&quot;phaseindex&quot;
        ///                :targetindex=&quot;targetindex&quot;&gt;&lt;/dmgdist-target-component&gt;
        ///            &lt;dmgtaken-component v-if=&quot;mode === 1&quot; :actor=&quot;target&quot; :key=&quot;&apos;taken&apos; + targetindex&quot;
        ///                :tableid=&quot;&apos;dmgtaken-target-&apos;+targetindex&quot; :phaseindex=&quot;phaseindex&quot;&gt;&lt;/dmgtaken-component&gt;
        ///            &lt;target-graph-tab-component v-for=&quot;(ph, id) in phases&quot; v-if=&quot;mode === 2 &amp;&amp; id  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetTab {
            get {
                return ResourceManager.GetString("tmplTargetTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;dpsmode = 0&quot; :class=&quot;{active: dpsmode === 0}&quot;&gt;Full&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phase.end - phase.start &gt; 10&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;dpsmode = 1&quot; :class=&quot;{active: dpsmode === 1}&quot;&gt;10s&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phase.end - phase.start &gt; 30&quot; class=&quot;nav [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetTabGraph {
            get {
                return ResourceManager.GetString("tmplTargetTabGraph", resourceCulture);
            }
        }
    }
}
